{
    "until loop": {
        "prefix": ["until"],
        "body": [
            "until ${1:condition} do",
            "\t${2:code}",
            "end"
        ],
        "description": "The until loop executes while condition is not met."
    },
    "unless condition": {
        "prefix": ["unless"],
        "body": [
            "unless ${1:condition}",
            "\t${2:code}",
            "else",
            "\t${3:code}",
            "end"
        ],
        "description": "Executes code if its falsy or else running the other code."
    },
    "if condition": {
        "prefix": ["unless"],
        "body": [
            "if ${1:condition}",
            "\t${2:code}",
            "else",
            "\t${3:code}",
            "end"
        ],
        "description": "Executes code if its truthy or else running the other code."
    },
    "times loop block": {
        "prefix": ["t", "times"],
        "body": [
            "${1:amount}.times do |i|",
            "\t${2:code}",
            "end"
        ],
        "description": "Calls the given block self times with each integer in (0..self-1):"
    },
    "times loop inline": {
        "prefix": ["t", "times"],
        "body": ["${1:amount}.times {|i| ${2:code} }"],
        "description": "Calls the given block self times with each integer in (0..self-1):"
    },
    "chomp": {
        "prefix": ["c", "ch", "chomp", "gets"],
        "body": ["${1:variable_name} = gets.chomp"],
        "description": "Creates a variable and passing console input into it.\nAswell as removing trailing lines."
    },
    "is_a?(class)": {
        "prefix": ["ia", "_a", "is_a", "?i", "?is"],
        "body": ["is_a?(${1:class})"],
        "description": "Returns true if class is the class of obj,\n or if class is one of the superclasses of obj or modules included in obj."
    },
    "nil?": {
        "prefix": ["?n", "?ni", "nil?", "n"],
        "body": ["nil?"],
        "description": "Returns true if self is nil."
    }
}