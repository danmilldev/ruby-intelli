{
    "abs": {
        "prefix": ["a", "ab"],
        "body": ["abs"],
        "description": "Returns the absolute value of self."
    },
    "allbits?": {
        "prefix": ["a", "al"],
        "body": ["allbits?"],
        "description": "Returns true if all bits that are set (=1) in mask are also set in self; returns false otherwise."
    },
    "anybits?": {
        "prefix": ["a", "an"],
        "body": ["anybits?"],
        "description": "Returns true if any bit that is set (=1) in mask is also set in self; returns false otherwise."
    },
    "bit_length": {
        "prefix": ["b", "bi"],
        "body": ["bit_length"],
        "description": "Returns the number of bits of the value of self,\nwhich is the bit position of the highest-order bit that is different from the sign bit \n(where the least significant bit has bit position 1).\nIf there is no such bit (zero or minus one), returns zero."
    },
    "even?": {
        "prefix": ["ev", "e"],
        "body": ["even?"],
        "description": "Returns true if self is an even number, false otherwise."
    },
    "ceil(digit)": {
        "prefix": ["ceil", "ce"],
        "body": ["ceil(${1:digit})"],
        "description": "Returns the smallest number greater than or equal to self with a precision of ndigits decimal digits."
    },
    "ceildiv(digit)": {
        "prefix": ["ci", "ceildiv"],
        "body": ["ceildiv(${1:digit})"],
        "description": "Returns the result of division self by numeric. rounded up to the nearest integer."
    },
    "digits": {
        "prefix": ["di", "digits"],
        "body": ["digits"],
        "description": "Returns an array of integers representing the base-radix digits of self; the first element of the array represents the least significant digit:"
    },
    "digits(base)": {
        "prefix": ["di", "digits"],
        "body": ["digits(${1:base})"],
        "description": "Returns an array of integers representing the base-radix digits of self; the first element of the array represents the least significant digit:"
    },
    "floor": {
        "prefix": ["fl", "floor"],
        "body": ["floor"],
        "description": "Returns the largest number less than or equal to self with a precision of ndigits decimal digits."
    },
    "nobits?(mask)": {
        "prefix": ["no", "nobits?"],
        "body": ["nobits?"],
        "description": "Returns true if no bit that is set (=1) in mask is also set in self; returns false otherwise."
    },
    "odd?": {
        "prefix": ["odd?"],
        "body": ["odd?"],
        "description": "Returns true if self is an odd number, false otherwise."
    },
    "pow(number)": {
        "prefix": ["pow"],
        "body": ["pow(${1:number})"],
        "description": "Returns (modular) exponentiation as: a**b."
    },
    "size": {
        "prefix": ["size"],
        "body": ["size"],
        "description": "Returns the number of bytes in the machine representation of self; the value is system-dependent:"
    },
    "to_d": {
        "prefix": ["to", "_d", "_", "to_d"],
        "body": ["to_d"],
        "description": "Returns the value of int as a BigDecimal.\nRequires to have: \nrequire 'bigdecimal'\nrequire 'bigdecimal/util.'"
    },
    "to_f": {
        "prefix": ["to", "_f", "_", "to_f"],
        "body": ["to_f"],
        "description": "Converts self to a Float."
    },
    "to_i": {
        "prefix": ["to", "_i", "_", "to_i"],
        "body": ["to_i"],
        "description": "Converts self to a Integer."
    },
    "to_s": {
        "prefix": ["to", "_s", "_", "to_s"],
        "body": ["to_s"],
        "description": "Converts self to a String."
    },
    "zero?": {
        "prefix": ["zero?", "?z"],
        "body": ["zero?"],
        "description": "Returns true if self has a zero value, false otherwise."
    }
}